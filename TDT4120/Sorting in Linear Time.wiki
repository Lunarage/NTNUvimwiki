= Chapter 8 - Sorting in Linear Time =

== Lower Bounds For Sorting ==



== Counting Sort ==

* Count occurrences of a values in a list
* Accumulate occurrences in given list
* The position is now given by the accumulative list

{{{ python
def counting_sort(A, k):
    # Output list
    B = [0]*len(A)
    # List of k zeros
    C = [0]*k
    # Count occurrences of values in A
    for j in range(len(A)):
        C[A[j]] = C[A[j]] + 1
    # Accumulate list
    for i in range(k):
        C[i] = C[i] + C[i-1]
    # Place values in output
    # Done in reverse to ensure a stable algorithm
    for j in reversed(range(len(A))):
        B[C[A[j]]] = A[j]
        C[A[j]] = C[A[j]] - 1
    return B
}}}

== Radix Sort ==

== Bucket Sort ==


